Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
    Hay en total 954 paquetes en la captura de tráfico
* ¿Cuánto tiempo dura la captura?
    Dura 56.1493 segundos
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
    En la máquina cuya IP es 192.168.1.34, es una IP privada que corresponde a IP de clase C, usadas por compañías medianas y pequeñas, y por pequeños proveedores de internet(ISP)

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
    Es mucho mayor el tráfico de UDP, con un 96.2%, frente a un 2.1% de TCP,    esto tiene sentido precisamente por ser una transmisión en tiempo real, debido a que en RTP usamos UDP en su mayoría, ya que preferimos enviar todo de manera no fiable, ya que no queremos estar reenviando paquetes que no lleguen de primeras.
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
    Hay más protocolos (algunos englobados en UDP y TCP), como SIP, DNS, RTP, RTCP, HTP, ICMP, ARP, IPv4, SDP, STUN
¿Cuales crees que son señal y cuales ruido?
    Todo será señal exceptuando mensajes ICMP de puerto inalcanzable, los mensajes ARP y algunos mensajes del NAT de binding request y binding response

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
    Hay algunos paquetes SIP en cada uno de estos segundos: 7, 14, 16, 38, 39, 55
* Y los paquetes con RTP, ¿cuándo se envı́an?
    Se envían continuamente aproximadamente desde el segundo 17 hasta es segundo 38
    
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
    Las cuatro primeras tramas pertenecen a DNS
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
    Es la 80.58.61.250
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
    La 86.64.162.35

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo?
    Está pidiendo con GET: http://ekiga.net/ip/
* ¿Qué user agent (UA) la está pidiendo?
    El User Agent es Ekiga
* ¿Qué devuelve el servidor?
    La dirección IP 83.36.48.212
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?
    Recibimos la IP 37.35.207.92, que nuestra IP privada

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
    STUN(Session Traversal Utilities for NAT), protocolo de red cliente/servidor que permitirá a cliente NAT que puedan encontrar la dir. IP pública, la NAT donde se encuentra y el puerto de Internet asociado con el puerto local. Puede comprobar que tipo de NAT tenemos para comprobar si podemos realizar la conexión y que no actúe como un firewall.
* ¿Podrı́as decir si estamos tras un NAT o no?
    Claramente, si

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
    El servidor registrar se tiene la dir. IP 86.64.162.35
* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
    Puerto destino del mensaje REGISTER lo vemos en la parte de UDP, que es el 5060, el puerto de origen por el que sale es el 5063
* ¿Qué método SIP utiliza el UA para registrarse?
    Método REGISTER, como ya hemos visto y comprobado
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
    Pues los demás métodos existentes en SIP, dado que el UA trabaja con este protocolo, estos métodos serán INVITE, ACK, OPTIONS, CANCEL, MESSAGE, BYE, REFER
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
    No, dado que el servidor registro le devuelve un 401 Unauthorized
* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    Porque si te registra de forma adecuada te devuelve un 200 OK
* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
    El segundo intento de registro es más grande(bytes) debido a que ahora incluye el campo Authorization
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
    Esto está en el campo Expires que es de valor 3600

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
    Si, en la cabecera From denro del INVITE, observamos que la direccion sip es grex@ekiga.net, y su nombre se ve en SIP Display Info que es Gregorio Robles
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
    Contiene la descripción de la sesión utilizando el protocolo SDP
* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    No, dado que el siguiente paquete es de respuesta con un 407 Proxy Authentication Requiered
* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
    Pues en que ahora tendrá que añadir el campo Proxy-Authorization, para que pueda realizarse el INVITE correctamente

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    RTP es el protocolo que se utiliza, y H.261 es el códec de vídeo que recomienda la ITU, 
* ¿Cuál es el tamaño de paquete de los mismos?
    Todos los paquetes RTP son de 214 bytes, y lo de H.261 están variando en torno a los 1000 Bytes (1 KB), para el primer paquete, y entre 200 y 400 el segundo paquete(van en grupos de dos), son algo variables, pero rondan esa cifra.
* ¿Se utilizan bits de padding?
    Aparentemente no
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
    Es variable, al principio tardan más y luego tardan menos si observamos los paquetes RTP
* ¿Cuántos bits/segundo se envı́an?
   La velocidad es variable, si nos fijamos en los paquetes RTP del pincipio alrededor del paquete número 150 se envía un paquete RTP de 214 bytes cada 0.02 segundos aproximadamente, que serán en 1 segundo entonces dará una velocidad de 10700 bytes/segundo
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
    Hay dos flujos de dos direcciones diferentes, una corresponde con el audio y otro con el vídeo
* ¿Cuántos paquetes se pierden?
    Se pierden el 0%, es decir, ninguno
* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
    El máximo valor de delta es de 1290.444ms y 1290.479ms, la delta es la diferencia temporal de llegada de un paquete con respecto al anterior
* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
    Los medios son de 42.5 y de 153.240, y los máximos de 119.635 y 183.096, el jitter es la variabilidad del retardo de los paquetes, con estos valores de jitter si tendremos una conversación de calidad dado que estamos en el rango de jitter adecuado para una conversacion de calidad aceptable y suficiente.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
    Será cero para ambos campos, lógicamente, es el primer paquete
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
    Si, porque el valor de delta es cero
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
    Hasta el paquete 247, que el jitter se dispara a 38 ms
* ¿A qué se debe el cambio tan brusco del jitter?
    Está relacionado también con la brusca bajada del ancho de banda en ese momento
* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
    No, se relaciona en cierta medida, pero la delta aumenta muchísimo más que el jitter. La delta es más grande.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación?
    Desde el segundo 17.2 hasta el 38.1 es decir, 20.8 segundos
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    Hay dos SSRC, uno para audio y otro para video, uno es el 0xbf4afd37 y otro el 0x43306582, no hay ningún CSRC

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
    El método BYE
* ¿En qué trama(s)?
    En la trama 924 envía el primero, pero lo reenvía en el 925, 927 y 933
* ¿Por qué crees que se envı́a varias veces?
    Porque no recibe en ningún momento la respuesta 200 OK que le indique al emisor que el BYE ha sido recibido y aceptado

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    Para borrarse del registro, ya que incluye en la cabecera Expires el número 0, que es lo que significa, que te de de baja
* ¿En qué trama sucede esto?
    950 y lo reenvía en el 952
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
    En que el campo/cabecera expires ahora es 0, y esto indica al servidor registro que le dé de baja
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
* ¿Son diferentes el registro y la descripción de la sesión?

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
* ¿Cuál es su periodicidad?
* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.
* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

